class Solution {
public List topKFrequent(int[] nums, int k) {
List list = Arrays.stream( nums ).boxed().collect(Collectors.toList());
Map<Integer,Integer> map = new TreeMap<>();
int m = list.size();
while(m>0){
int count = 0;
int index = m-1;
for(;index>0;index--){
if(list.get(index).equals(list.get(0))){
list.remove(index);
m--;
count++;
}
}
map.put(list.get(0),count++);
list.remove(0);
m--;
}
List<Map.Entry<Integer,Integer>> list1 = new ArrayList<Map.Entry<Integer,Integer>>(map.entrySet());
Collections.sort(list1,new Comparator<Map.Entry<Integer,Integer>>(){
public int compare(Map.Entry<Integer,Integer> o1,Map.Entry<Integer,Integer> o2){
return o2.getValue().compareTo(o1.getValue());
}
});
